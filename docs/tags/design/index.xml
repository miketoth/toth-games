<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>design on Toth Games</title>
    <link>https://tothgames.com/tags/design/</link>
    <description>Recent content in design on Toth Games</description>
    <generator>Hugo -- gohugo.io</generator>
    <managingEditor>hello@tothgames.com (Michael Toth &amp; Brian Toth)</managingEditor>
    <webMaster>hello@tothgames.com (Michael Toth &amp; Brian Toth)</webMaster>
    <lastBuildDate>Sat, 27 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://tothgames.com/tags/design/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Monte Carlo simulation in game design</title>
      <link>https://tothgames.com/posts/monte-carlo/</link>
      <pubDate>Sat, 27 Feb 2021 00:00:00 +0000</pubDate>
      <author>hello@tothgames.com (Michael Toth &amp; Brian Toth)</author>
      <guid>https://tothgames.com/posts/monte-carlo/</guid>
      <description>Introduction &amp;ldquo;Shouldn&amp;rsquo;t I always attack with my whole army?&amp;rdquo;
&amp;ldquo;Why would I ever pick this card?&amp;rdquo;
If you&amp;rsquo;ve ever had a playtest that led to awkward questions like these - and realized that your players were totally right - you&amp;rsquo;ve probably wondered how you might catch this sort of issue during design. Maybe you recalled a confusing formula like \( {n\choose k} = \frac{n!}{k!(n-k)!} \), but found it woefully inadequate when dealing with the sort of scenarios common in board games.</description>
    </item>
    
  </channel>
</rss>
